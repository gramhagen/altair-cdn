daemon off;
user www-data;
worker_processes 1;
pid /tmp/nginx.pid;

events {
	worker_connections 1024;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log /var/log/app/nginx.access.log;
  error_log /var/log/app/nginx.error.log;

  gzip on;
  gzip_disable "msie6";

  upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed to return a good HTTP response
    server 127.0.0.1:5000 fail_timeout=0;
  }

  server {
    listen 80;
    listen 443;
    client_max_body_size 1M;

    keepalive_timeout 5;

    location / {
      root /www/images;
      try_files $uri @proxy;

      expires max;
      access_log off;
      auth_basic "Restricted Content";
      auth_basic_user_file /etc/nginx/.htpasswd;
    }

    location @proxy {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # enable this if and only if you use HTTPS
      # proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $http_host;

      # we don't want nginx trying to do something clever with redirects, we set the Host: header above already
      proxy_redirect off;
      proxy_pass http://localhost:5000;

      auth_basic "Restricted Content";
      auth_basic_user_file /etc/nginx/.htpasswd;
    }
  }
}
